#
#  This YAML supports a pod than can run a given thin client
#  Web demo
#

apiVersion: v1
kind: Pod
metadata:
  name: geospatial-demo-pod
spec:
  containers:

  - name: nginx
    image: nginx:1.19.5

    env:
      - name: K8S_USERNAME
        valueFrom:
          secretKeyRef:
            name: k8ssandra-superuser
            key: username
      - name: K8S_PASSWORD
        valueFrom:
          secretKeyRef:
            name: k8ssandra-superuser
            key: password
      - name: GRAPHQL_URL
        value: "http://k8ssandra-dc1-stargate-service.ns-k8s:8080/graphql/"
      - name: K8S_AUTH_URL
        value: "http://k8ssandra-dc1-stargate-service.ns-k8s:8081/v1/auth"
      - name: STARGATE_URL
        value: "http://k8ssandra-dc1-stargate-service.ns-k8s:8082"

    command: ["/bin/bash", "-c"]
    args:
    - |
      apt-get update
      apt-get install -y vim 
      apt-get install -y python3 python3-pip
         #
      pip3 install flask
      pip3 install gql
      pip3 install libgeohash
      pip3 install python-decouple
         #
      mkdir     /opt/60_Web_Demo_Program
      chmod 777 /opt/60_Web_Demo_Program
      cd        /opt/60_Web_Demo_Program

      #
      #  ** Put the Web application in a Tarball/GZ, and put it on GitHub 
      #
      curl -L https://raw.githubusercontent.com/farrell0/DataStax-Developers-Notebook/master/2021/61_DemoProgram.tar.gz | tar xz
      
      #
      # python3 60_index.py
      sleep infinity & wait

    ports:
    - containerPort: 80
    volumeMounts:
    - name: opt
      mountPath: /opt
  volumes:
  - name: opt
    emptyDir: {}

  # dnsPolicy: Default               #  this being set will prevent us from finding the DB svc endpoint





